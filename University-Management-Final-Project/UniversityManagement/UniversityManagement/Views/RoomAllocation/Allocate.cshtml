@using Vereyon.Web
@model UniversityManagement.Models.RoomAllocation

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />
<br />

@using (Html.BeginForm())
{
   
    <div class="form-horizontal">

        @Html.RenderFlashMessages()
        <fieldset>
            <legend>Allocate Class Rooms</legend>
            <div class="col-md-8 col-md-offset-3">
                

                @*Department Dropdown*@
                <div class="form-group">
                    @Html.LabelFor(model => model.Course.Department.DepartmentId, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Departments", null, "--Select Department--", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Course.Department.DepartmentId, "", new { @class = "text-danger" })
                    </div>
                    <label id="deptErrorMessage" style="color: red;"></label>
                </div>

                @*Course Dropdown*@
                <div class="form-group">
                    @Html.LabelFor(model => model.CourseId, "Course", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <select class="form-control" id="Courses">
                            <option value="0">-- Select Course --</option>
                        </select>
                    </div>
                    <label id="courseErrorMessage" style="color: red;"></label>
                </div>

                
                <div class="form-group">
                    @Html.LabelFor(model => model.RoomId, "Room No", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Rooms", null, "--Select Room--", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RoomId, "", new { @class = "text-danger" })
                    </div>
                    <label id="roomErrorMessage" style="color: red;"></label>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DayId, "Day", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Days", null, "--Select Day--", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DayId, "", new { @class = "text-danger" })
                    </div>
                    <label id="dayErrorMessage" style="color: red;"></label>
                </div>


                <div class="form-group">
                    @*@Html.LabelFor(model => model.StartTime, "From", new { @class = "control-label col-md-2" })*@
                    <label class="control-label col-md-2">From</label>
                    <div class="col-md-4">

                        <input type="time" id="startTime" name="startTime" class="form-control" />
                        <label id="startTimeErrorMessage" style="color: red;"></label>
                    </div>
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.EndTime, "To", new { @class = "control-label col-md-2" })*@
                    <label class="control-label col-md-2">To</label>
                    <div class="col-md-10">

                        <input type="time" id="endTime" name="endTime" class="form-control" />
                        <label id="endTimeErrorMessage" style="color: red;"></label>
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Allocate" class="btn btn-default" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <label id="roomAllocateSuccessMessage" style="color: green;"></label>
                        <label id="roomAllocateErrorMessage" style="color: red;"></label>
                        <label id="roomAllocateNotPossibleMessage" style="color: red;"></label>
                    </div>
                </div>
            </div>
        </fieldset>


    </div>
}


@section Scripts {

    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(document).ready(function() {

            $("#Departments").change(function () {

                $("#roomAllocateNotPossibleMessage").text("");
                $("#roomAllocateSuccessMessage").text("");
                $("#roomAllocateErrorMessage").text("");
                $("#Courses").append('<option value=' + 0 + '>' + "-- Select Course --" + '</option>');

                var departmentId = $("#Departments").val();
                var parameter = { deptId: departmentId };
                $("#Courses").empty();
                $("#Courses").append('<option value=0> -- Select Course -- </option>');
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetCoursesByDeptId", "RoomAllocation")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(parameter),
                    dataType: "json",
                    success: function(data) {
                        // alert("Success");
                        $.each(data, function(key, value) {
                            // alert(value.Id + " " + value.CourseCode);
                            $("#Courses").append('<option value=' + value.Id + '>' + value.Name + '</option>');
                        });
                    }
                });
            });

            $("#submit").click(function() {
                var errorValue = 0;
                ResetErrorLabel();
                var departmentId = $("#departmentId").val();
                if (departmentId == 0) {
                    $("#departmentErroMessage").text("Select One Department!");
                    errorValue = 1;

                }

                var courseId = $("#courseId").val();
                if (courseId == 0) {
                    $("#courseErrorMessage").text("Select One Course!");
                    errorValue = 1;
                }

                var roomId = $("#roomId").val();
                if (roomId == 0) {
                    $("#roomErrorMessage").text("Select One Room!");
                    errorValue = 1;
                }

                var dayId = $("#dayId").val();
                if (dayId == 0) {
                    $("#dayErrorMessage").text("Select One Day!");
                    errorValue = 1;
                }

                var time = $("#startTime").val();

                if (time == "") {

                    $("#startTimeErrorMessage").text("Start time is Required!");
                    errorValue = 1;
                }

                var hour = parseInt(time.substr(0, 2));
                var minute = parseInt(time.substr(3, 5));
                var startTime = hour * 60 + minute;


                time = $("#endTime").val();
                if (time == "") {

                    $("#endTimeErrorMessage").text("End time is Required!");
                    errorValue = 1;
                }

                hour = parseInt(time.substr(0, 2));
                minute = parseInt(time.substr(3, 5));
                var endTime = hour * 60 + minute;


                if (errorValue == 1) {
                    return false;
                }

                if (startTime == endTime) {
                    $("#roomAllocateNotPossibleMessage").text("Its not Possible to create Zero Minute Duration class");
                    return false;
                } else if (startTime < endTime) {
                    var jsonData = { DepartmentId: departmentId, CourseId: courseId, RoomId: roomId, DayId: dayId, StartTime: startTime, EndTime: endTime };

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("SaveRoomSchedule", "ClassRoomAllocation")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(jsonData),
                        dataType: "json",
                        success: function(data) {
                            if (data == true) {
                                $("#roomAllocateSuccessMessage").text("Class Room Schedule Saved Successfully!");
                                $("#departmentId").prop("selectedIndex", 0);
                                $("#courseId").prop("selectedIndex", 0);
                                $("#roomId").prop("selectedIndex", 0);
                                $("#dayId").prop("selectedIndex", 0);
                                $("#startTime").val('mm/dd/yyyy');
                                $("#endTime").val('mm/dd/yyyy');
                                return false;
                            } else {
                                $("#roomAllocateErrorMessage").text("Overlapping Problem, Change Time or Day.");
                                return false;
                            }
                        }
                    });

                } else {
                    $("#roomAllocateNotPossibleMessage").text("Invalid Time chosen");
                }


                return false;
            });

        });


        function ResetErrorLabel() {
            $("#deptErrorMessage").text("");
            $("#courseErrorMessage").text("");
            $("roomAllocateSuccessMessage").text("");
            $("#roomErrorMessage").text("");
            $("#dayErrorMessage").text("");
            $("#startTimeErrorMessage").text("");
            $("#endTimeErrorMessage").text("");
        }

    </script>
}

